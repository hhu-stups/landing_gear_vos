<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.texttools.text_lastmodified="1423829017872" org.eventb.texttools.text_representation="machine R8GearsDoorsHandleValvesControllerSwitchLightsSensors refines R7GearsDoorsHandleValvesControllerSwitchLights  sees Gear Door Handle Position Valve Switch Lights&#10;&#10;variables open_EV close_EV retract_EV extend_EV valve_open_door valve_close_door valve_extend_gear valve_retract_gear gears doors handle shock_absorber general_EV general_valve analogical_switch handle_move green_light orange_light red_light anomaly sensors_door_closed sensors_door_open sensors_gear_extended sensors_gear_retracted sensors_handle sensors_shock_absorber sensors_aswitch valid_sensors_gear_extended valid_sensors_gear_retracted valid_sensors_door_open valid_sensors_door_closed valid_sensors_handle valid_sensors_shock_absorber valid_sensors_aswitch&#10;&#10;invariants&#10;  @door_closed sensors_door_closed ∈ POSITION → (1‥3 → BOOL)&#10;  @door_open sensors_door_open ∈ POSITION → (1‥3 → BOOL)&#10;  @gear_extended sensors_gear_extended ∈ POSITION → (1‥3 → BOOL)&#10;  @gear_retracted sensors_gear_retracted ∈ POSITION → (1‥3 → BOOL)&#10;  @handles sensors_handle ∈ 1‥3 → HANDLE_STATE&#10;  @shockabs sensors_shock_absorber ∈ 1‥3 → PLANE_STATE&#10;  @aswitch sensors_aswitch ∈ 1‥3 → SWITCH_STATE&#10;  @valid_sensors1 valid_sensors_gear_extended ∈ POSITION → ℙ(1‥3)&#10;  @valid_sensors2 valid_sensors_gear_retracted ∈ POSITION → ℙ(1‥3)&#10;  @valid_sensors3 valid_sensors_door_open ∈ POSITION → ℙ(1‥3)&#10;  @valid_sensors4 valid_sensors_door_closed ∈ POSITION → ℙ(1‥3)&#10;  @valid_sensors5 valid_sensors_handle ∈ ℙ(1‥3)&#10;  @valid_sensors6 valid_sensors_shock_absorber ∈ ℙ(1‥3)&#10;  @valid_sensors7 valid_sensors_aswitch ∈ ℙ(1‥3)&#10;  @anomaly anomaly ∈ BOOL&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;    then&#10;      @door_closed sensors_door_closed ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ TRUE)&#10;      @door_open sensors_door_open ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ FALSE)&#10;      @gear_extended sensors_gear_extended ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ TRUE)&#10;      @gear_retracted sensors_gear_retracted ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ FALSE)&#10;      @handles sensors_handle ≔ {1↦down, 2↦down, 3↦down}&#10;      @shockabs sensors_shock_absorber ≔ {1↦ground, 2↦ground, 3↦ground}&#10;      @aswitch sensors_aswitch ≔ {1↦switch_closed, 2↦switch_closed, 3↦switch_closed}&#10;      @valid_sensors1 valid_sensors_gear_extended ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}&#10;      @valid_sensors2 valid_sensors_gear_retracted ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}&#10;      @valid_sensors3 valid_sensors_door_open ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}&#10;      @valid_sensors4 valid_sensors_door_closed ≔  λp·p∈ POSITION ∣ 1‥3 // {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}&#10;      @valid_sensors5 valid_sensors_handle ≔ {1,2,3}&#10;      @valid_sensors6 valid_sensors_shock_absorber ≔ {1,2,3}&#10;      @valid_sensors7 valid_sensors_aswitch ≔ {1,2,3}&#10;      @anomaly anomaly ≔ FALSE&#10;  end&#10;&#10;  event begin_flying extends begin_flying&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_shock_absorber // choose a valid sensor&#10;      @grd3 v ∈ PLANE_STATE&#10;    then&#10;      @sensors sensors_shock_absorber ≔ (λx·x ∈ 1‥3∖{s}∣ flight) ∪ {s ↦ v}&#10;  end&#10;&#10;  event land_plane extends land_plane&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_shock_absorber // choose a valid sensor&#10;      @grd3 v ∈ PLANE_STATE&#10;    then&#10;      @sensors sensors_shock_absorber ≔ (λx·x ∈ 1‥3∖{s}∣ ground) ∪ {s ↦ v}&#10;  end&#10;&#10;  event open_valve_door_open extends open_valve_door_open&#10;  end&#10;&#10;  event close_valve_door_open extends close_valve_door_open&#10;  end&#10;&#10;  event open_valve_door_close extends open_valve_door_close&#10;  end&#10;&#10;  event close_valve_door_close extends close_valve_door_close&#10;  end&#10;&#10;  event open_valve_retract_gear extends open_valve_retract_gear&#10;  end&#10;&#10;  event close_valve_retract_gear extends close_valve_retract_gear&#10;  end&#10;&#10;  event open_valve_extend_gear extends open_valve_extend_gear&#10;  end&#10;&#10;  event close_valve_extend_gear extends close_valve_extend_gear&#10;  end&#10;&#10;  event con_stimulate_open_door_valve extends con_stimulate_open_door_valve&#10;  end&#10;&#10;  event con_stop_stimulate_open_door_valve extends con_stop_stimulate_open_door_valve&#10;  end&#10;&#10;  event con_stimulate_close_door_valve extends con_stimulate_close_door_valve&#10;  end&#10;&#10;  event con_stop_stimulate_close_door_valve extends con_stop_stimulate_close_door_valve&#10;  end&#10;&#10;  event con_stimulate_retract_gear_valve extends con_stimulate_retract_gear_valve&#10;  end&#10;&#10;  event con_stop_stimulate_retract_gear_valve extends con_stop_stimulate_retract_gear_valve&#10;  end&#10;&#10;  event con_stimulate_extend_gear_valve extends con_stimulate_extend_gear_valve&#10;  end&#10;&#10;  event con_stop_stimulate_extend_gear_valve extends con_stop_stimulate_extend_gear_valve&#10;  end&#10;&#10;  event env_start_retracting_first extends env_start_retracting_first&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_extended(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_retract_gear_skip extends env_retract_gear_skip&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_retracted(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_retract_gear_last extends env_retract_gear_last&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_retracted(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_start_extending extends env_start_extending&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_retracted(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_extend_gear_last extends env_extend_gear_last&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_extended(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_extend_gear_skip extends env_extend_gear_skip&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_gear_extended(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_start_open_door extends env_start_open_door&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_closed(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_open_door_last extends env_open_door_last&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_open(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_open_door_skip extends env_open_door_skip&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_open(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_start_close_door extends env_start_close_door&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_open(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_close_door extends env_close_door&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_closed(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_close_door_skip extends env_close_door_skip&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_door_closed(gr) // choose a valid sensor&#10;      @grd3 v ∈ BOOL&#10;    then&#10;      @sensors sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}&#10;  end&#10;&#10;  event toggle_handle_up extends toggle_handle_up&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_handle // choose a valid sensor&#10;      @grd3 v ∈ HANDLE_STATE&#10;    then&#10;      @sensors sensors_handle ≔ (λx·x ∈ 1‥3∖{s}∣ up) ∪ {s ↦ v}&#10;  end&#10;&#10;  event toggle_handle_down extends toggle_handle_down&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_handle // choose a valid sensor&#10;      @grd3 v ∈ HANDLE_STATE&#10;    then&#10;      @sensors sensors_handle ≔ (λx·x ∈ 1‥3∖{s}∣ down) ∪ {s ↦ v}&#10;  end&#10;&#10;  event con_stimulate_general_valve extends con_stimulate_general_valve&#10;  end&#10;&#10;  event con_stop_stimulate_general_valve extends con_stop_stimulate_general_valve&#10;  end&#10;&#10;  event evn_open_general_valve extends evn_open_general_valve&#10;  end&#10;&#10;  event evn_close_general_valve extends evn_close_general_valve&#10;  end&#10;&#10;  event env_close_analogical_switch extends env_close_analogical_switch&#10;    any s v&#10;    where&#10;      @grd4 s ∈ valid_sensors_aswitch // choose a valid sensor&#10;      @grd5 v ∈ SWITCH_STATE&#10;    then&#10;      @sensors sensors_aswitch ≔ (λx·x ∈ 1‥3∖{s}∣ switch_closed) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_open_analogical_switch extends env_open_analogical_switch&#10;    any s v&#10;    where&#10;      @grd2 s ∈ valid_sensors_aswitch // choose a valid sensor&#10;      @grd3 v ∈ SWITCH_STATE&#10;    then&#10;      @sensors sensors_aswitch ≔ (λx·x ∈ 1‥3∖{s}∣ switch_open) ∪ {s ↦ v}&#10;  end&#10;&#10;  event env_turn_on_red_light extends env_turn_on_red_light&#10;    where&#10;      @grd2 anomaly = TRUE&#10;  end&#10;&#10;  event env_turn_on_orange_light extends env_turn_on_orange_light&#10;  end&#10;&#10;  event env_turn_off_orange_light extends env_turn_off_orange_light&#10;  end&#10;&#10;  event env_turn_on_green_light extends env_turn_on_green_light&#10;  end&#10;&#10;  event env_turn_off_green_light extends env_turn_off_green_light&#10;  end&#10;&#10;  event check_sensors&#10;    then&#10;      @v valid_sensors_door_closed ≔  λp·p∈ POSITION ∣&#10;         {s∣ s ∈ valid_sensors_door_closed(p)&#10;         ∧ (∃s2·s2 ∈ valid_sensors_door_closed(p)&#10;         ∧ s2 ≠ s ∧ sensors_door_closed(p)(s) = sensors_door_closed(p)(s2))} // a sensor is valid if there is another valid sensor with same value&#10;      @v2 valid_sensors_door_open ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_door_open(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_door_open(p)&#10;          ∧ s2 ≠ s ∧ sensors_door_open(p)(s) = sensors_door_open(p)(s2))}&#10;      @v3 valid_sensors_gear_extended ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_gear_extended(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_gear_extended(p)&#10;          ∧ s2 ≠ s ∧ sensors_gear_extended(p)(s) = sensors_gear_extended(p)(s2))}&#10;      @v4 valid_sensors_gear_retracted ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_gear_retracted(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_gear_retracted(p)&#10;          ∧ s2 ≠ s ∧ sensors_gear_retracted(p)(s) = sensors_gear_retracted(p)(s2))}&#10;      @v5 valid_sensors_handle ≔ {s∣ s ∈ valid_sensors_handle&#10;          ∧ (∃s2·s2 ∈ valid_sensors_handle&#10;          ∧ s2 ≠ s ∧ sensors_handle(s) = sensors_handle(s2))}&#10;      @v6 valid_sensors_shock_absorber ≔ {s∣ s ∈ valid_sensors_shock_absorber&#10;          ∧ (∃s2·s2 ∈ valid_sensors_shock_absorber&#10;          ∧ s2 ≠ s ∧ sensors_shock_absorber(s) = sensors_shock_absorber(s2))}&#10;      @v7 valid_sensors_aswitch ≔ {s∣ s ∈ valid_sensors_aswitch&#10;          ∧ (∃s2·s2 ∈ valid_sensors_aswitch&#10;          ∧ s2 ≠ s ∧ sensors_aswitch(s) = sensors_aswitch(s2))}&#10;  end&#10;&#10;  event set_anomaly_sensors&#10;    where&#10;      @g anomaly = FALSE&#10;      @g2 (∅ ∈ valid_sensors_gear_extended[POSITION]&#10;          ∪ valid_sensors_gear_retracted[POSITION]&#10;          ∪ valid_sensors_door_open[POSITION]&#10;          ∪ valid_sensors_door_closed[POSITION]&#10;          ∪ {valid_sensors_handle}&#10;          ∪ {valid_sensors_shock_absorber}&#10;          ∪ {valid_sensors_aswitch})&#10;    then&#10;      @a anomaly ≔ TRUE&#10;  end&#10;&#10;  event set_anomaly&#10;    where&#10;      @g anomaly = FALSE&#10;    then&#10;      @a anomaly ≔ TRUE&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_WrcxALN4EeSlqrPXeBXIFg" org.eventb.core.target="R7GearsDoorsHandleValvesControllerSwitchLights"/>
<org.eventb.core.seesContext name="_WrhpgLN4EeSlqrPXeBXIFg" org.eventb.core.target="Gear"/>
<org.eventb.core.seesContext name="_WrhpgbN4EeSlqrPXeBXIFg" org.eventb.core.target="Door"/>
<org.eventb.core.seesContext name="_WrhpgrN4EeSlqrPXeBXIFg" org.eventb.core.target="Handle"/>
<org.eventb.core.seesContext name="_Wrhpg7N4EeSlqrPXeBXIFg" org.eventb.core.target="Position"/>
<org.eventb.core.seesContext name="_WrhphLN4EeSlqrPXeBXIFg" org.eventb.core.target="Valve"/>
<org.eventb.core.seesContext name="_WrhphbN4EeSlqrPXeBXIFg" org.eventb.core.target="Switch"/>
<org.eventb.core.seesContext name="_WrhphrN4EeSlqrPXeBXIFg" org.eventb.core.target="Lights"/>
<org.eventb.core.variable name="_WriQkLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="open_EV"/>
<org.eventb.core.variable name="_WriQkbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="close_EV"/>
<org.eventb.core.variable name="_WriQkrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="retract_EV"/>
<org.eventb.core.variable name="_Wri3oLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="extend_EV"/>
<org.eventb.core.variable name="_Wri3obN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valve_open_door"/>
<org.eventb.core.variable name="_Wri3orN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valve_close_door"/>
<org.eventb.core.variable name="_Wri3o7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="valve_extend_gear"/>
<org.eventb.core.variable name="_Wri3pLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valve_retract_gear"/>
<org.eventb.core.variable name="_Wri3pbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="gears"/>
<org.eventb.core.variable name="_Wri3prN4EeSlqrPXeBXIFg" org.eventb.core.identifier="doors"/>
<org.eventb.core.variable name="_WrjesLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="handle"/>
<org.eventb.core.variable name="_WrjesbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="shock_absorber"/>
<org.eventb.core.variable name="_WrjesrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="general_EV"/>
<org.eventb.core.variable name="_Wrjes7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="general_valve"/>
<org.eventb.core.variable name="_WrjetLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="analogical_switch"/>
<org.eventb.core.variable name="_WrkFwLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="handle_move"/>
<org.eventb.core.variable name="_WrkFwbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="green_light"/>
<org.eventb.core.variable name="_WrkFwrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="orange_light"/>
<org.eventb.core.variable name="_WrkFw7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="red_light"/>
<org.eventb.core.variable name="_WrkFxLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="anomaly"/>
<org.eventb.core.variable name="_WrkFxbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_door_closed"/>
<org.eventb.core.variable name="_Wrks0LN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_door_open"/>
<org.eventb.core.variable name="_Wrks0bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_gear_extended"/>
<org.eventb.core.variable name="_Wrks0rN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_gear_retracted"/>
<org.eventb.core.variable name="_Wrks07N4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_handle"/>
<org.eventb.core.variable name="_WrlT4LN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_shock_absorber"/>
<org.eventb.core.variable name="_WrlT4bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="sensors_aswitch"/>
<org.eventb.core.variable name="_WrlT4rN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_gear_extended"/>
<org.eventb.core.variable name="_Wrl68LN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_gear_retracted"/>
<org.eventb.core.variable name="_Wrl68bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_door_open"/>
<org.eventb.core.variable name="_Wrl68rN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_door_closed"/>
<org.eventb.core.variable name="_Wrl687N4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_handle"/>
<org.eventb.core.variable name="_WrmiALN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_shock_absorber"/>
<org.eventb.core.variable name="_WrmiAbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="valid_sensors_aswitch"/>
<org.eventb.core.invariant name="_WrmiArN4EeSlqrPXeBXIFg" org.eventb.core.label="door_closed" org.eventb.core.predicate="sensors_door_closed ∈ POSITION → (1‥3 → BOOL)"/>
<org.eventb.core.invariant name="_WrnJELN4EeSlqrPXeBXIFg" org.eventb.core.label="door_open" org.eventb.core.predicate="sensors_door_open ∈ POSITION → (1‥3 → BOOL)"/>
<org.eventb.core.invariant name="_WrnJEbN4EeSlqrPXeBXIFg" org.eventb.core.label="gear_extended" org.eventb.core.predicate="sensors_gear_extended ∈ POSITION → (1‥3 → BOOL)"/>
<org.eventb.core.invariant name="_WrnwILN4EeSlqrPXeBXIFg" org.eventb.core.label="gear_retracted" org.eventb.core.predicate="sensors_gear_retracted ∈ POSITION → (1‥3 → BOOL)"/>
<org.eventb.core.invariant name="_WrnwIbN4EeSlqrPXeBXIFg" org.eventb.core.label="handles" org.eventb.core.predicate="sensors_handle ∈ 1‥3 → HANDLE_STATE"/>
<org.eventb.core.invariant name="_WroXMLN4EeSlqrPXeBXIFg" org.eventb.core.label="shockabs" org.eventb.core.predicate="sensors_shock_absorber ∈ 1‥3 → PLANE_STATE"/>
<org.eventb.core.invariant name="_WroXMbN4EeSlqrPXeBXIFg" org.eventb.core.label="aswitch" org.eventb.core.predicate="sensors_aswitch ∈ 1‥3 → SWITCH_STATE"/>
<org.eventb.core.invariant name="_Wro-QLN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors1" org.eventb.core.predicate="valid_sensors_gear_extended ∈ POSITION → ℙ(1‥3)"/>
<org.eventb.core.invariant name="_Wro-QbN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors2" org.eventb.core.predicate="valid_sensors_gear_retracted ∈ POSITION → ℙ(1‥3)"/>
<org.eventb.core.invariant name="_Wro-QrN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors3" org.eventb.core.predicate="valid_sensors_door_open ∈ POSITION → ℙ(1‥3)"/>
<org.eventb.core.invariant name="_WrplULN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors4" org.eventb.core.predicate="valid_sensors_door_closed ∈ POSITION → ℙ(1‥3)"/>
<org.eventb.core.invariant name="_WrplUbN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors5" org.eventb.core.predicate="valid_sensors_handle ∈ ℙ(1‥3)"/>
<org.eventb.core.invariant name="_WrqMYLN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors6" org.eventb.core.predicate="valid_sensors_shock_absorber ∈ ℙ(1‥3)"/>
<org.eventb.core.invariant name="_WrqMYbN4EeSlqrPXeBXIFg" org.eventb.core.label="valid_sensors7" org.eventb.core.predicate="valid_sensors_aswitch ∈ ℙ(1‥3)"/>
<org.eventb.core.invariant name="_WrqMYrN4EeSlqrPXeBXIFg" org.eventb.core.label="anomaly" org.eventb.core.predicate="anomaly ∈ BOOL"/>
<org.eventb.core.event name="_WrqzcLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_WrqzcbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_closed ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ TRUE)" org.eventb.core.label="door_closed"/>
<org.eventb.core.action name="_WrqzcrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_open ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ FALSE)" org.eventb.core.label="door_open"/>
<org.eventb.core.action name="_Wrqzc7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_extended ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ TRUE)" org.eventb.core.label="gear_extended"/>
<org.eventb.core.action name="_WrragLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_retracted ≔ λp·p∈ POSITION ∣ (λx·x ∈ 1‥3 ∣ FALSE)" org.eventb.core.label="gear_retracted"/>
<org.eventb.core.action name="_WrragbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_handle ≔ {1↦down, 2↦down, 3↦down}" org.eventb.core.label="handles"/>
<org.eventb.core.action name="_WrragrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_shock_absorber ≔ {1↦ground, 2↦ground, 3↦ground}" org.eventb.core.label="shockabs"/>
<org.eventb.core.action name="_Wrrag7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_aswitch ≔ {1↦switch_closed, 2↦switch_closed, 3↦switch_closed}" org.eventb.core.label="aswitch"/>
<org.eventb.core.action name="_WrsBkLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_gear_extended ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}" org.eventb.core.label="valid_sensors1"/>
<org.eventb.core.action name="_WrsBkbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_gear_retracted ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}" org.eventb.core.label="valid_sensors2"/>
<org.eventb.core.action name="_WrsBkrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_door_open ≔ {front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}" org.eventb.core.label="valid_sensors3"/>
<org.eventb.core.action name="_WrsBk7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_door_closed ≔  λp·p∈ POSITION ∣ 1‥3" org.eventb.core.comment="{front↦{1,2,3}, left↦{1,2,3}, right↦{1,2,3}}" org.eventb.core.label="valid_sensors4"/>
<org.eventb.core.action name="_WrsooLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_handle ≔ {1,2,3}" org.eventb.core.label="valid_sensors5"/>
<org.eventb.core.action name="_WrsoobN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_shock_absorber ≔ {1,2,3}" org.eventb.core.label="valid_sensors6"/>
<org.eventb.core.action name="_WrsoorN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_aswitch ≔ {1,2,3}" org.eventb.core.label="valid_sensors7"/>
<org.eventb.core.action name="_Wrsoo7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="anomaly ≔ FALSE" org.eventb.core.label="anomaly"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrtPsLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="begin_flying">
<org.eventb.core.refinesEvent name="_WrtPsbN4EeSlqrPXeBXIFg" org.eventb.core.target="begin_flying"/>
<org.eventb.core.parameter name="_Wrt2wLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wrt2wbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wrt2wrN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_shock_absorber"/>
<org.eventb.core.guard name="_Wrt2w7N4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ PLANE_STATE"/>
<org.eventb.core.action name="_Wrud0LN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_shock_absorber ≔ (λx·x ∈ 1‥3∖{s}∣ flight) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wrud0bN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="land_plane">
<org.eventb.core.refinesEvent name="_Wrud0rN4EeSlqrPXeBXIFg" org.eventb.core.target="land_plane"/>
<org.eventb.core.parameter name="_WrvE4LN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_WrvE4bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_WrvE4rN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_shock_absorber"/>
<org.eventb.core.guard name="_WrvE47N4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ PLANE_STATE"/>
<org.eventb.core.action name="_WrvE5LN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_shock_absorber ≔ (λx·x ∈ 1‥3∖{s}∣ ground) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wrvr8LN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_valve_door_open">
<org.eventb.core.refinesEvent name="_Wrvr8bN4EeSlqrPXeBXIFg" org.eventb.core.target="open_valve_door_open"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wrvr8rN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_valve_door_open">
<org.eventb.core.refinesEvent name="_WrwTALN4EeSlqrPXeBXIFg" org.eventb.core.target="close_valve_door_open"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrwTAbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_valve_door_close">
<org.eventb.core.refinesEvent name="_WrwTArN4EeSlqrPXeBXIFg" org.eventb.core.target="open_valve_door_close"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrwTA7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_valve_door_close">
<org.eventb.core.refinesEvent name="_Wrw6ELN4EeSlqrPXeBXIFg" org.eventb.core.target="close_valve_door_close"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wrw6EbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_valve_retract_gear">
<org.eventb.core.refinesEvent name="_Wrw6ErN4EeSlqrPXeBXIFg" org.eventb.core.target="open_valve_retract_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wrw6E7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_valve_retract_gear">
<org.eventb.core.refinesEvent name="_Wrw6FLN4EeSlqrPXeBXIFg" org.eventb.core.target="close_valve_retract_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrxhILN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_valve_extend_gear">
<org.eventb.core.refinesEvent name="_WrxhIbN4EeSlqrPXeBXIFg" org.eventb.core.target="open_valve_extend_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrxhIrN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_valve_extend_gear">
<org.eventb.core.refinesEvent name="_WrxhI7N4EeSlqrPXeBXIFg" org.eventb.core.target="close_valve_extend_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrxhJLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_open_door_valve">
<org.eventb.core.refinesEvent name="_WryIMLN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stimulate_open_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WryIMbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_open_door_valve">
<org.eventb.core.refinesEvent name="_WryIMrN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stop_stimulate_open_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WryIM7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_close_door_valve">
<org.eventb.core.refinesEvent name="_WryINLN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stimulate_close_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WryINbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_close_door_valve">
<org.eventb.core.refinesEvent name="_WryvQLN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stop_stimulate_close_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WryvQbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_retract_gear_valve">
<org.eventb.core.refinesEvent name="_WryvQrN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stimulate_retract_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WryvQ7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_retract_gear_valve">
<org.eventb.core.refinesEvent name="_WryvRLN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stop_stimulate_retract_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrzWULN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_extend_gear_valve">
<org.eventb.core.refinesEvent name="_WrzWUbN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stimulate_extend_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrzWUrN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_extend_gear_valve">
<org.eventb.core.refinesEvent name="_WrzWU7N4EeSlqrPXeBXIFg" org.eventb.core.target="con_stop_stimulate_extend_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WrzWVLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_retracting_first">
<org.eventb.core.refinesEvent name="_Wrz9YLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_start_retracting_first"/>
<org.eventb.core.parameter name="_Wrz9YbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wrz9YrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wrz9Y7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_extended(gr)"/>
<org.eventb.core.guard name="_Wrz9ZLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wrz9ZbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr0kcLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_retract_gear_skip">
<org.eventb.core.refinesEvent name="_Wr0kcbN4EeSlqrPXeBXIFg" org.eventb.core.target="env_retract_gear_skip"/>
<org.eventb.core.parameter name="_Wr0kcrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr0kc7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr1LgLN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_retracted(gr)"/>
<org.eventb.core.guard name="_Wr1LgbN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr1LgrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr1Lg7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_retract_gear_last">
<org.eventb.core.refinesEvent name="_Wr1ykLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_retract_gear_last"/>
<org.eventb.core.parameter name="_Wr1ykbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr1ykrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr1yk7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_retracted(gr)"/>
<org.eventb.core.guard name="_Wr2ZoLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr2ZobN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr2ZorN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_extending">
<org.eventb.core.refinesEvent name="_Wr3AsLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_start_extending"/>
<org.eventb.core.parameter name="_Wr3AsbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr3AsrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr3As7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_retracted(gr)"/>
<org.eventb.core.guard name="_Wr3AtLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr3AtbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_retracted(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr3AtrN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_extend_gear_last">
<org.eventb.core.refinesEvent name="_Wr3nwLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_extend_gear_last"/>
<org.eventb.core.parameter name="_Wr3nwbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr3nwrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr4O0LN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_extended(gr)"/>
<org.eventb.core.guard name="_Wr4O0bN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr4O0rN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr4O07N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_extend_gear_skip">
<org.eventb.core.refinesEvent name="_Wr414LN4EeSlqrPXeBXIFg" org.eventb.core.target="env_extend_gear_skip"/>
<org.eventb.core.parameter name="_Wr414bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr414rN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr4147N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_gear_extended(gr)"/>
<org.eventb.core.guard name="_Wr5c8LN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr5c8bN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_gear_extended(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr5c8rN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_open_door">
<org.eventb.core.refinesEvent name="_Wr6EALN4EeSlqrPXeBXIFg" org.eventb.core.target="env_start_open_door"/>
<org.eventb.core.parameter name="_Wr6EAbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr6EArN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr6EA7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_closed(gr)"/>
<org.eventb.core.guard name="_Wr6EBLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr6rELN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr6rEbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_door_last">
<org.eventb.core.refinesEvent name="_Wr6rErN4EeSlqrPXeBXIFg" org.eventb.core.target="env_open_door_last"/>
<org.eventb.core.parameter name="_Wr6rE7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr7SILN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr7SIbN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_open(gr)"/>
<org.eventb.core.guard name="_Wr7SIrN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr7SI7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr7SJLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_door_skip">
<org.eventb.core.refinesEvent name="_Wr75MLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_open_door_skip"/>
<org.eventb.core.parameter name="_Wr75MbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr75MrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr75M7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_open(gr)"/>
<org.eventb.core.guard name="_Wr75NLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr75NbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr8gQLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_close_door">
<org.eventb.core.refinesEvent name="_Wr8gQbN4EeSlqrPXeBXIFg" org.eventb.core.target="env_start_close_door"/>
<org.eventb.core.parameter name="_Wr8gQrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr8gQ7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr8gRLN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_open(gr)"/>
<org.eventb.core.guard name="_Wr9HULN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr9HUbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_open(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ FALSE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr9HUrN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_door">
<org.eventb.core.refinesEvent name="_Wr9uYLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_close_door"/>
<org.eventb.core.parameter name="_Wr9uYbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr9uYrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr9uY7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_closed(gr)"/>
<org.eventb.core.guard name="_Wr9uZLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr-VcLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr-VcbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_door_skip">
<org.eventb.core.refinesEvent name="_Wr-VcrN4EeSlqrPXeBXIFg" org.eventb.core.target="env_close_door_skip"/>
<org.eventb.core.parameter name="_Wr-Vc7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr-8gLN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr-8gbN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_door_closed(gr)"/>
<org.eventb.core.guard name="_Wr-8grN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ BOOL"/>
<org.eventb.core.action name="_Wr-8g7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_door_closed(gr) ≔ (λx·x ∈ 1‥3∖{s}∣ TRUE) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_Wr_jkLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="toggle_handle_up">
<org.eventb.core.refinesEvent name="_Wr_jkbN4EeSlqrPXeBXIFg" org.eventb.core.target="toggle_handle_up"/>
<org.eventb.core.parameter name="_Wr_jkrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_Wr_jk7N4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_Wr_jlLN4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_handle"/>
<org.eventb.core.guard name="_WsAKoLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ HANDLE_STATE"/>
<org.eventb.core.action name="_WsAKobN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_handle ≔ (λx·x ∈ 1‥3∖{s}∣ up) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsAKorN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="toggle_handle_down">
<org.eventb.core.refinesEvent name="_WsAxsLN4EeSlqrPXeBXIFg" org.eventb.core.target="toggle_handle_down"/>
<org.eventb.core.parameter name="_WsAxsbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_WsAxsrN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_WsAxs7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_handle"/>
<org.eventb.core.guard name="_WsAxtLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ HANDLE_STATE"/>
<org.eventb.core.action name="_WsBYwLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_handle ≔ (λx·x ∈ 1‥3∖{s}∣ down) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsBYwbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_general_valve">
<org.eventb.core.refinesEvent name="_WsBYwrN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stimulate_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsBYw7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_general_valve">
<org.eventb.core.refinesEvent name="_WsB_0LN4EeSlqrPXeBXIFg" org.eventb.core.target="con_stop_stimulate_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsB_0bN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="evn_open_general_valve">
<org.eventb.core.refinesEvent name="_WsB_0rN4EeSlqrPXeBXIFg" org.eventb.core.target="evn_open_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsCm4LN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="evn_close_general_valve">
<org.eventb.core.refinesEvent name="_WsCm4bN4EeSlqrPXeBXIFg" org.eventb.core.target="evn_close_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsCm4rN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_analogical_switch">
<org.eventb.core.refinesEvent name="_WsDN8LN4EeSlqrPXeBXIFg" org.eventb.core.target="env_close_analogical_switch"/>
<org.eventb.core.parameter name="_WsDN8bN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_WsDN8rN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_WsDN87N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd4" org.eventb.core.predicate="s ∈ valid_sensors_aswitch"/>
<org.eventb.core.guard name="_WsDN9LN4EeSlqrPXeBXIFg" org.eventb.core.label="grd5" org.eventb.core.predicate="v ∈ SWITCH_STATE"/>
<org.eventb.core.action name="_WsD1ALN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_aswitch ≔ (λx·x ∈ 1‥3∖{s}∣ switch_closed) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsD1AbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_analogical_switch">
<org.eventb.core.refinesEvent name="_WsEcELN4EeSlqrPXeBXIFg" org.eventb.core.target="env_open_analogical_switch"/>
<org.eventb.core.parameter name="_WsEcEbN4EeSlqrPXeBXIFg" org.eventb.core.identifier="s"/>
<org.eventb.core.parameter name="_WsEcErN4EeSlqrPXeBXIFg" org.eventb.core.identifier="v"/>
<org.eventb.core.guard name="_WsEcE7N4EeSlqrPXeBXIFg" org.eventb.core.comment="choose a valid sensor" org.eventb.core.label="grd2" org.eventb.core.predicate="s ∈ valid_sensors_aswitch"/>
<org.eventb.core.guard name="_WsEcFLN4EeSlqrPXeBXIFg" org.eventb.core.label="grd3" org.eventb.core.predicate="v ∈ SWITCH_STATE"/>
<org.eventb.core.action name="_WsFDILN4EeSlqrPXeBXIFg" org.eventb.core.assignment="sensors_aswitch ≔ (λx·x ∈ 1‥3∖{s}∣ switch_open) ∪ {s ↦ v}" org.eventb.core.label="sensors"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsFDIbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_turn_on_red_light">
<org.eventb.core.refinesEvent name="_WsFDIrN4EeSlqrPXeBXIFg" org.eventb.core.target="env_turn_on_red_light"/>
<org.eventb.core.guard name="_WsFDI7N4EeSlqrPXeBXIFg" org.eventb.core.label="grd2" org.eventb.core.predicate="anomaly = TRUE"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsFqMLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_turn_on_orange_light">
<org.eventb.core.refinesEvent name="_WsFqMbN4EeSlqrPXeBXIFg" org.eventb.core.target="env_turn_on_orange_light"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsFqMrN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_turn_off_orange_light">
<org.eventb.core.refinesEvent name="_WsGRQLN4EeSlqrPXeBXIFg" org.eventb.core.target="env_turn_off_orange_light"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsGRQbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_turn_on_green_light">
<org.eventb.core.refinesEvent name="_WsG4ULN4EeSlqrPXeBXIFg" org.eventb.core.target="env_turn_on_green_light"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsG4UbN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_turn_off_green_light">
<org.eventb.core.refinesEvent name="_WsG4UrN4EeSlqrPXeBXIFg" org.eventb.core.target="env_turn_off_green_light"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsG4U7N4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="check_sensors">
<org.eventb.core.action name="_WsHfYLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_door_closed ≔  λp·p∈ POSITION ∣&#10;         {s∣ s ∈ valid_sensors_door_closed(p)&#10;         ∧ (∃s2·s2 ∈ valid_sensors_door_closed(p)&#10;         ∧ s2 ≠ s ∧ sensors_door_closed(p)(s) = sensors_door_closed(p)(s2))}" org.eventb.core.comment="a sensor is valid if there is another valid sensor with same value" org.eventb.core.label="v"/>
<org.eventb.core.action name="_WsHfYbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_door_open ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_door_open(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_door_open(p)&#10;          ∧ s2 ≠ s ∧ sensors_door_open(p)(s) = sensors_door_open(p)(s2))}" org.eventb.core.label="v2"/>
<org.eventb.core.action name="_WsHfYrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_gear_extended ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_gear_extended(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_gear_extended(p)&#10;          ∧ s2 ≠ s ∧ sensors_gear_extended(p)(s) = sensors_gear_extended(p)(s2))}" org.eventb.core.label="v3"/>
<org.eventb.core.action name="_WsIGcLN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_gear_retracted ≔  λp·p∈ POSITION ∣&#10;          {s∣ s ∈ valid_sensors_gear_retracted(p)&#10;          ∧ (∃s2·s2 ∈ valid_sensors_gear_retracted(p)&#10;          ∧ s2 ≠ s ∧ sensors_gear_retracted(p)(s) = sensors_gear_retracted(p)(s2))}" org.eventb.core.label="v4"/>
<org.eventb.core.action name="_WsIGcbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_handle ≔ {s∣ s ∈ valid_sensors_handle&#10;          ∧ (∃s2·s2 ∈ valid_sensors_handle&#10;          ∧ s2 ≠ s ∧ sensors_handle(s) = sensors_handle(s2))}" org.eventb.core.label="v5"/>
<org.eventb.core.action name="_WsIGcrN4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_shock_absorber ≔ {s∣ s ∈ valid_sensors_shock_absorber&#10;          ∧ (∃s2·s2 ∈ valid_sensors_shock_absorber&#10;          ∧ s2 ≠ s ∧ sensors_shock_absorber(s) = sensors_shock_absorber(s2))}" org.eventb.core.label="v6"/>
<org.eventb.core.action name="_WsIGc7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="valid_sensors_aswitch ≔ {s∣ s ∈ valid_sensors_aswitch&#10;          ∧ (∃s2·s2 ∈ valid_sensors_aswitch&#10;          ∧ s2 ≠ s ∧ sensors_aswitch(s) = sensors_aswitch(s2))}" org.eventb.core.label="v7"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsItgLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="set_anomaly_sensors">
<org.eventb.core.guard name="_WsItgbN4EeSlqrPXeBXIFg" org.eventb.core.label="g" org.eventb.core.predicate="anomaly = FALSE"/>
<org.eventb.core.guard name="_WsItgrN4EeSlqrPXeBXIFg" org.eventb.core.label="g2" org.eventb.core.predicate="(∅ ∈ valid_sensors_gear_extended[POSITION]&#10;          ∪ valid_sensors_gear_retracted[POSITION]&#10;          ∪ valid_sensors_door_open[POSITION]&#10;          ∪ valid_sensors_door_closed[POSITION]&#10;          ∪ {valid_sensors_handle}&#10;          ∪ {valid_sensors_shock_absorber}&#10;          ∪ {valid_sensors_aswitch})"/>
<org.eventb.core.action name="_WsItg7N4EeSlqrPXeBXIFg" org.eventb.core.assignment="anomaly ≔ TRUE" org.eventb.core.label="a"/>
</org.eventb.core.event>
<org.eventb.core.event name="_WsIthLN4EeSlqrPXeBXIFg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="set_anomaly">
<org.eventb.core.guard name="_WsJUkLN4EeSlqrPXeBXIFg" org.eventb.core.label="g" org.eventb.core.predicate="anomaly = FALSE"/>
<org.eventb.core.action name="_WsJUkbN4EeSlqrPXeBXIFg" org.eventb.core.assignment="anomaly ≔ TRUE" org.eventb.core.label="a"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
